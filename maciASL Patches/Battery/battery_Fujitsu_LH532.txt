#Maintained by: dxxs for: 派奇
#battery_Fujitsu_LH532.txt

# version(版本): 1.0
# Update Time(更新时间) : initial version, 初始版本

# initial work by dxxs 2014-08-18, 由 dxxs 制作 

# works for: 针对
#  Fujitsu 富士通 LH532

# Tip: If you get a 0% battery status,you should also patch the Rehabman's "Fix Mutex with non-zero SyncLevel" patch.
# You also can patch the both of your computer's battery patch and the Rehabman's patch at one time.

# 注意：如果打过电量补丁后，有获取的电池状态显示为0%的情况，还需要打 Rehabman的 “Fix Mutex with non-zero SyncLevel” 补丁。
# 你也可以，一次性打好 自己电脑的电量补丁 和 Rehabman 的那个补丁。

# ==== Field devide 字段拆分 ====
#MBCT
into device label EC0 code_regex MBCT,\s+16 replace_matched begin MBC0,8,MBC1,8 end;
#RCAP
into device label EC0 code_regex RCAP,\s+16 replace_matched begin RCA0,8,RCA1,8 end;
#MBVT
into device label EC0 code_regex MBVT,\s+16 replace_matched begin MBV0,8,MBV1,8 end;
#MBCP
into device label EC0 code_regex MBCP,\s+16 replace_matched begin MBP0,8,MBP1,8 end;
#MBDV
into device label EC0 code_regex MBDV,\s+16 replace_matched begin MBD0,8,MBD1,8 end;
#MDCP
into device label EC0 code_regex MDCP,\s+16 replace_matched begin MDP0,8,MDP1,8 end;
#SMW0
into device label EC0 code_regex SMW0,\s+16 replace_matched begin SMW0,8, SMW1,8 end;

# ==== Replace called method 替换调用方法 ====
#SMD0
into method label SMRD code_regex SMD0 replaceall_matched begin RECB(0x1C,264) end;
into method label SMWR code_regex Store\s\(Arg3,\sSMD0\) replaceall_matched begin WECB(0x1C,264,Arg3) end;
#MBCT
into method label UPBS code_regex \^\^PCI0.LPCB.EC0.MBCT replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MBC0,^^PCI0.LPCB.EC0.MBC1) end;
#RCAP
into method label UPBS code_regex \^\^PCI0.LPCB.EC0.RCAP replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.RCA0,^^PCI0.LPCB.EC0.RCA1) end;
#MBVT
into method label UPBS code_regex \^\^PCI0.LPCB.EC0.MBVT replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MBV0,^^PCI0.LPCB.EC0.MBV1) end;
#MBCP
into method label UPBI code_regex \^\^PCI0.LPCB.EC0.MBCP replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MBP0,^^PCI0.LPCB.EC0.MBP1) end;
#MBDV
into method label UPBI code_regex \^\^PCI0.LPCB.EC0.MBDV replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MBD0,^^PCI0.LPCB.EC0.MBD1) end;
#MDCP
into method label UPBI code_regex \^\^PCI0.LPCB.EC0.MDCP replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MDP0,^^PCI0.LPCB.EC0.MDP1) end;
#SMW0
into method label SMRD code_regex SMW0 replaceall_matched begin B1B2(SMW0, SMW1) end;
into method label SMWR code_regex Store\s\(Arg3,\sSMW0\) replaceall_matched begin Store(ShiftRight(Arg3,8), SMW1)\nStore(Arg3, SMW0) end;

# ==== Data handling method 数据处理方法 ====
# utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
// Arg2 - value to write\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized)\n
{\n
Return(Or(Arg0, ShiftLeft(Arg1, 8)))\n
\n
}\n
end;