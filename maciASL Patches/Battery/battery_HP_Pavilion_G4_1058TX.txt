#Maintained by: dxxs for: 派奇
#battery_HP_Pavilion_G4_1058TX.txt

# version(版本): 2.0
# Update Time(更新时间) : 2014-9-17

# initial work by dxxs 2014-06-20, 由 dxxs 制作 

# works for: 针对
#  HP Pavilion G4 1058TX

# Tip: If you get a 0% battery status,you should also patch the Rehabman's "Fix Mutex with non-zero SyncLevel" patch.
# You also can patch the both of your computer's battery patch and the Rehabman's patch at one time.

# 注意：如果打过电量补丁后，有获取的电池状态显示为0%的情况，还需要打 Rehabman的 “Fix Mutex with non-zero SyncLevel” 补丁。
# 你也可以，一次性打好 自己电脑的电量补丁 和 Rehabman 的那个补丁。

# ==== Field devide 字段拆分 ====
#BFCC
into device label EC0 code_regex BFCC,\s+16, replace_matched begin BFC1,8,BFC2,8, end;
#MCUR
into device label EC0 code_regex MCUR,\s+16, replace_matched begin MCU0,8,MCU1,8, end;
#MBRM
into device label EC0 code_regex MBRM,\s+16, replace_matched begin MBRA,8,MBRB,8, end;
#MBCV
into device label EC0 code_regex MBCV,\s+16, replace_matched begin MBC1,8,MBC2,8, end;
#SMW0
into device label EC0 code_regex SMW0,\s+16 replace_matched begin SMW0,8, SMW1,8 end;

# ==== Replace called method 替换调用方法 ====
#SMD0
into method label SMWR code_regex Store\s\(Arg3,\sSMD0\) replaceall_matched begin WECB(0x04,256,Arg3) end;
#BFCC
into method label GBIF code_regex \^\^PCI0.LPCB.EC0.BFCC replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.BFC1,^^PCI0.LPCB.EC0.BFC2) end;
#MCUR
into method label GBCO code_regex \^\^PCI0.LPCB.EC0.MCUR replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MCU0,^^PCI0.LPCB.EC0.MCU1) end;
into method label UPBS code_regex \^\^PCI0.LPCB.EC0.MCUR replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MCU0,^^PCI0.LPCB.EC0.MCU1) end;
#MBRM
into method label UPBS code_regex \^\^PCI0.LPCB.EC0.MBRM replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MBRA,^^PCI0.LPCB.EC0.MBRB) end;
#MBCV
into method label UPBS code_regex \^\^PCI0.LPCB.EC0.MBCV replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.MBC1,^^PCI0.LPCB.EC0.MBC2) end;
#SMW0
into method label SMRD code_regex SMW0 replaceall_matched begin B1B2(SMW0, SMW1) end;
into method label SMWR code_regex Store\s\(Arg3,\sSMW0\) replaceall_matched begin Store(ShiftRight(Arg3,8), SMW1)\nStore(Arg3, SMW0) end;
#FLD1
into method label SMRD code_regex FLD1 replaceall_matched begin RECB(0x04, 128) end;
#FLD2
into method label SMRD code_regex FLD2 replaceall_matched begin RECB(0x04, 192) end;
#FLD3
into method label SMRD code_regex FLD3 replaceall_matched begin RECB(0x04, 256) end;

# ==== Data handling method 数据处理方法 ====
# utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
// Arg2 - value to write\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized)\n
{\n
Return(Or(Arg0, ShiftLeft(Arg1, 8)))\n
\n
}\n
end;