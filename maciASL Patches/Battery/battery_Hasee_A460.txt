#Maintained by: dxxs for: 派奇
#battery_Hasee_A460.txt

# version(版本): 1.0
# Update Time(更新时间) : initial version, 初始版本

# initial work by dxxs 2014-08-01, 由 dxxs 制作 

# works for: 针对
#  HASEE 神舟 A460

# Tip: If you get a 0% battery status,you should also patch the Rehabman's "Fix Mutex with non-zero SyncLevel" patch.
# You also can patch the both of your computer's battery patch and the Rehabman's patch at one time.

# 注意：如果打过电量补丁后，有获取的电池状态显示为0%的情况，还需要打 Rehabman的 “Fix Mutex with non-zero SyncLevel” 补丁。
# 你也可以，一次性打好 自己电脑的电量补丁 和 Rehabman 的那个补丁。

# ==== Field devide 字段拆分 ====
#TAH0
into device label EC0 code_regex TAH0,\s+16, replace_matched begin TAHA,8,TAHB,8, end;
#TAH1
into device label EC0 code_regex TAH1,\s+16, replace_matched begin TAHC,8,TAHD,8, end;
#B0VL
into device label EC0 code_regex B0VL,\s+16 replace_matched begin B0V0,8,B0V1,8 end;
#B0RC
into device label EC0 code_regex B0RC,\s+16 replace_matched begin B0R0,8,B0R1,8 end;
#B0FC
into device label EC0 code_regex B0FC,\s+16 replace_matched begin B0F0,8,B0F1,8 end;
#B0MD
into device label EC0 code_regex B0MD,\s+16 replace_matched begin B0M0,8,B0M1,8 end;
#B0ST
into device label EC0 code_regex B0ST,\s+16 replace_matched begin B0S0,8,B0S1,8 end;
#B0CC
into device label EC0 code_regex B0CC,\s+16 replace_matched begin B0CA,8,B0CB,8 end;
#B1VL
into device label EC0 code_regex B1VL,\s+16 replace_matched begin B1V0,8,B1V1,8 end;
#B1RC
into device label EC0 code_regex B1RC,\s+16 replace_matched begin B1R0,8,B1R1,8 end;
#B1FC
into device label EC0 code_regex B1FC,\s+16 replace_matched begin B1F0,8,B1F1,8 end;
#B1MD
into device label EC0 code_regex B1MD,\s+16 replace_matched begin B1M0,8,B1M1,8 end;
#B1ST
into device label EC0 code_regex B1ST,\s+16 replace_matched begin B1S0,8,B1S1,8 end;
#B1CC
into device label EC0 code_regex B1CC,\s+16 replace_matched begin B1CA,8,B1CB,8 end;
#B0DC
into device label EC0 code_regex B0DC,\s+16 replace_matched begin B0D0,8,B0D1,8 end;
#B0DV
into device label EC0 code_regex B0DV,\s+16 replace_matched begin B0D2,8,B0D3,8 end;
#B0SN
into device label EC0 code_regex B0SN,\s+16 replace_matched begin B0S2,8,B0S3,8 end;
#B1DC
into device label EC0 code_regex B1DC,\s+16 replace_matched begin B1D0,8,B1D1,8 end;
#B1DV
into device label EC0 code_regex B1DV,\s+16 replace_matched begin B1D2,8,B1D3,8 end;
#B1SN
into device label EC0 code_regex B1SN,\s+16 replace_matched begin B1S2,8,B1S3,8 end;
#DT2B
into device label EC0 code_regex DT2B,\s+16 replace_matched begin DT21,8,DT22,8 end;

# ==== Replace called method 替换调用方法 ====
#TAH0
into method label TACH code_regex TAH0 replaceall_matched begin B1B2(TAHA,TAHB) end;
#TAH1
into method label TACH code_regex TAH1 replaceall_matched begin B1B2(TAHC,TAHD) end;
#B0VL
into method label BVOT code_regex B0VL replaceall_matched begin B1B2(B0V0,B0V1) end;
#B0RC
into method label BRCP code_regex B0RC replaceall_matched begin B1B2(B0R0,B0R1) end;
#B0FC
into method label BIF2 code_regex B0FC replaceall_matched begin B1B2(B0F0,B0F1) end;
#B0MD
into method label BIF0 code_regex B0MD replaceall_matched begin B1B2(B0M0,B0M1) end;
into method label BIF3 code_regex B0MD replaceall_matched begin B1B2(B0M0,B0M1) end;
#B0ST
into method label BSTS code_regex B0ST replaceall_matched begin B1B2(B0S0,B0S1) end;
#B0CC
into method label BCRT code_regex B0CC replaceall_matched begin B1B2(B0CA,B0CB) end;
#B1VL
into method label BVOT code_regex B1VL replaceall_matched begin B1B2(B1V0,B1V1) end;
#B1RC
into method label BRCP code_regex B1RC replaceall_matched begin B1B2(B1R0,B1R1) end;
#B1FC
into method label BIF2 code_regex B1FC replaceall_matched begin B1B2(B1F0,B1F1) end;
#B1MD
into method label BIF0 code_regex B1MD replaceall_matched begin B1B2(B1M0,B1M1) end;
into method label BIF3 code_regex B1MD replaceall_matched begin B1B2(B1M0,B1M1) end;
#B1ST
into method label BSTS code_regex B1ST replaceall_matched begin B1B2(B1S0,B1S1) end;
#B1CC
into method label BCRT code_regex B1CC replaceall_matched begin B1B2(B1CA,B1CB) end;
#B0DC
into method label BIF1 code_regex B0DC replaceall_matched begin B1B2(B0D0,B0D1) end;
#B0DV
into method label BIF4 code_regex B0DV replaceall_matched begin B1B2(B0D2,B0D3) end;
#B0SN
into method label BIFA code_regex B0SN replaceall_matched begin B1B2(B0S2,B0S3) end;
#B1DC
into method label BIF1 code_regex B1DC replaceall_matched begin B1B2(B1D0,B1D1) end;
#B1DV
into method label BIF4 code_regex B1DV replaceall_matched begin B1B2(B1D2,B1D3) end;
#B1SN
into method label BIFA code_regex B1SN replaceall_matched begin B1B2(B1S2,B1S3) end;
#BDAT
into method label SMBR code_regex Store\s\(Zero,\sBDAT\) replaceall_matched begin WECB(0x1C,256,Zero) end;
into method label SMBR code_regex \(BDAT replaceall_matched begin (RECB(0x1C,256) end;
into method label SMBW code_regex Store\s\(Zero,\sBDAT\) replaceall_matched begin WECB(0x1C,256,Zero) end;
into method label SMBW code_regex Store\s\(Arg4,\sBDAT\) replaceall_matched begin WECB(0x1C,256,Arg4) end;
into method label ECSB code_regex \(BDAT replaceall_matched begin (RECB(0x1C,256) end;
#DT2B
into method label SMBR code_regex DT2B replaceall_matched begin B1B2(DT21,DT22) end;
into method label SMBW code_regex Store\s\(Arg4,\sDT2B\) replaceall_matched begin Store(ShiftRight(Arg4,8), DT22)\nStore(Arg4, DT21) end;
#BDA2
into method label ECSB code_regex \(BDA2 replaceall_matched begin (RECB(0x44,256) end;

# ==== Data handling method 数据处理方法 ====
# utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
// Arg2 - value to write\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized)\n
{\n
Return(Or(Arg0, ShiftLeft(Arg1, 8)))\n
\n
}\n
end;