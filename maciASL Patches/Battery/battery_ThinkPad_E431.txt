#Maintained by: dxxs for: 派奇
#battery_ThinkPad_E431.txt

# version(版本): 1.1
# Update Time(更新时间) : 2014-7-15

# initial work by dxxs 2014-07-14, 由 dxxs 制作 

# works for: 针对
#  ThinkPad E431

# Tip: If you get a 0% battery status,you should also patch the Rehabman's "Fix Mutex with non-zero SyncLevel" patch.
# You also can patch the both of your computer's battery patch and the Rehabman's patch at one time.

# 注意：如果打过电量补丁后，有获取的电池状态显示为0%的情况，还需要打 Rehabman的 “Fix Mutex with non-zero SyncLevel” 补丁。
# 你也可以，一次性打好 自己电脑的电量补丁 和 Rehabman 的那个补丁。

# ==== Field devide 字段拆分 ====
#HWAK
into device label EC0 code_regex HWAK,\s+16, replace_matched begin HWA0,8,HWA1,8, end;
#SBRC
into device label EC0 code_regex SBRC,\s+16, replace_matched begin SBR0,8,SBR1,8, end;
#SBFC
into device label EC0 code_regex SBFC,\s+16, replace_matched begin SBF0,8,SBF1,8, end;
#SBAC
into device label EC0 code_regex SBAC,\s+16, replace_matched begin SBA0,8,SBA1,8, end;
#SBVO
into device label EC0 code_regex SBVO,\s+16, replace_matched begin SBVA,8,SBVB,8, end;
#SBDC
into device label EC0 code_regex SBDC,\s+16, replace_matched begin SBD0,8,SBD1,8, end;
#SBDV
into device label EC0 code_regex SBDV,\s+16, replace_matched begin SBD2,8,SBD3,8, end;
#SBSN
into device label EC0 code_regex SBSN,\s+16 replace_matched begin SBS0,8,SBS1,8 end;
#SBCH
into device label EC0 code_regex SBCH,\s+32 replace_matched begin SBC0,8,SBC1,8,SBC2,8,SBC3,8 end;

# ==== Replace called method 替换调用方法 ====
#HWAK
into method label _L23 code_regex \\_SB.PCI0.LPCB.EC0.HWAK replaceall_matched begin B1B2(\\_SB.PCI0.LPCB.EC0.HWA0,\\_SB.PCI0.LPCB.EC0.HWA1) end;
into method label _WAK code_regex \(\\_SB.PCI0.LPCB.EC0.HWAK replaceall_matched begin (B1B2(\\_SB.PCI0.LPCB.EC0.HWA0,\\_SB.PCI0.LPCB.EC0.HWA1) end;
into method label _WAK code_regex Store\s\(Local0,\s\\_SB.PCI0.LPCB.EC0.HWAK\) replaceall_matched begin Store(ShiftRight(Local0,8), \\_SB.PCI0.LPCB.EC0.HWA1)\nStore(Local0, \\_SB.PCI0.LPCB.EC0.HWA0) end;
into method label _WAK code_regex Store\s\(Zero,\s\\_SB.PCI0.LPCB.EC0.HWAK\) replaceall_matched begin Store(Zero, \\_SB.PCI0.LPCB.EC0.HWA1)\nStore(Zero, \\_SB.PCI0.LPCB.EC0.HWA0) end;
#SBRC
into method label GBST code_regex SBRC replaceall_matched begin B1B2(SBR0,SBR1) end;
#SBFC
into method label GBIF code_regex SBFC replaceall_matched begin B1B2(SBF0,SBF1) end;
#SBAC
into method label GBST code_regex SBAC replaceall_matched begin B1B2(SBA0,SBA1) end;
#SBVO
into method label GBST code_regex SBVO replaceall_matched begin B1B2(SBVA,SBVB) end;
#SBDC
into method label GBIF code_regex SBDC replaceall_matched begin B1B2(SBD0,SBD1) end;
#SBDV
into method label GBIF code_regex SBDV replaceall_matched begin B1B2(SBD2,SBD3) end;
#SBSN
into method label GBIF code_regex SBSN replaceall_matched begin B1B2(SBS0,SBS1) end;
#SBCH
into method label GBIF code_regex SBCH replaceall_matched begin B1B4(SBC0,SBC1,SBC2,SBC3) end;
#SBMN
into method label GBIF code_regex SBMN replaceall_matched begin RECB(0xA0,128) end;
#SBDN
into method label GBIF code_regex SBDN replaceall_matched begin RECB(0xA0,128) end;

# ==== Data handling method 数据处理方法 ====
# utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized)\n
{\n
Return(Or(Arg0, ShiftLeft(Arg1, 8)))\n
}\n
end;

into method label B1B4 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B4, 4, NotSerialized)\n
{\n
    Store(Arg3, Local0)\n
    Or(Arg2, ShiftLeft(Local0, 8), Local0)\n
    Or(Arg1, ShiftLeft(Local0, 8), Local0)\n
    Or(Arg0, ShiftLeft(Local0, 8), Local0)\n
    Return(Local0)\n
}\n
end;